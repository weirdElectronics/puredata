#N canvas 270 223 919 578 12;
#X obj 191 381 cos~;
#X obj 241 353 +~ -0.25;
#X obj 241 380 cos~;
#X obj 128 418 *~;
#X obj 182 418 *~;
#X obj 128 455 -~;
#X text 10 293 pair of allpass;
#X text 9 310 filters to make;
#X text 9 328 90 degree phase;
#X text 7 345 shifted versions;
#X text 447 192 <-- shift frequency;
#X text 311 321 cosine and sine waves;
#X text 495 295 SINGLE SIDEBAND MODULATION;
#X text 740 295 (AKA FREQUENCY SHIFTING);
#X text 352 547 updated for Pd version 0.39;
#X obj 241 326 phasor~;
#X text 222 418 <-- complex multipier;
#X text 221 435 (calculates real part);
#X text 310 336 to form the real and;
#X text 310 352 imaginary part of a;
#X text 310 369 complex sinusoid;
#X text 483 325 The signal sideband modulator gives you only one sideband
for each frequency in the input signal (whereas ring modulation gave
both a positive and negative sideband). You can set the shift frequency
positive to shift all frequencies upward \, or negative to shift them
downwards.;
#X text 482 405 The technique is to filter the input into two versions
\, 90 degrees out of phase \, which can be interpreted as the real
and imaginary part of a complex signal with positive frequencies only.
You can then form the (complex) product of this with a (complex) sinusoid
to modulate upward or downward in frequency.;
#X obj 129 276 hilbert~;
#X text 482 501 The "Hilbert~" object is an abstraction in pd/extra.
;
#X obj -51 4 inlet~;
#X obj 128 521 outlet~;
#X msg 229 85 0;
#X obj 229 34 loadbang;
#X obj 241 59 r ssb_reset;
#X obj 206 164 vu 15 80 empty empty -1 -8 0 10 #404040 #606060 1 0
;
#X obj 261 231 bng 15 250 50 0 ssb_reset empty Reset 20 8 0 12 #ffffff
#ffffff #000000;
#X obj 232 196 hsl 128 15 -1000 1000 0 0 empty freq frequency_shift
20 8 0 10 #00ff04 #000000 #000000 0 1;
#X obj 325 231 tgl 15 0 \$0-active active-mod Active 20 8 0 12 #ffffff
#000000 #000000 0 1;
#X obj 369 196 nbx 5 14 -1000 1000 0 0 empty empty empty 0 -8 0 10
#fcfcfc #000000 #000000 0 256;
#X obj 186 125 pvu~;
#X text 385 36 Switch off Activate toggle in order to bypass the effect
and save CPU cycles.;
#X text 387 80 Reset will restore the effect to its defaupt values.
;
#X text 388 110 based on Pd example: H09.ssb.modulation;
#X obj -25 39 r \$0-active;
#X obj -56 67 expr~ $v1*(1-$f2) \; $v1*$f2;
#X connect 0 0 3 1;
#X connect 1 0 2 0;
#X connect 2 0 4 1;
#X connect 3 0 5 0;
#X connect 4 0 5 1;
#X connect 5 0 26 0;
#X connect 15 0 1 0;
#X connect 15 0 0 0;
#X connect 23 0 3 0;
#X connect 23 1 4 0;
#X connect 25 0 40 0;
#X connect 27 0 32 0;
#X connect 28 0 27 0;
#X connect 29 0 27 0;
#X connect 32 0 34 0;
#X connect 34 0 15 0;
#X connect 35 0 30 0;
#X connect 39 0 40 1;
#X connect 40 0 26 0;
#X connect 40 1 23 0;
#X coords 0 -1 1 1 232 100 1 198 152;
